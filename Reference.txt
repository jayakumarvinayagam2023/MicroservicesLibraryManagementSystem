Part 2: Microservices Architecture
Splitting the Monolithic App:

Author Service

Maintains details about authors.
    Provides an endpoint to retrieve all books by an author.
    Book Service

Maintains the book catalog.
    Allows borrowing and returning of books. However, when a book is borrowed or returned, it sends a request to the Borrowing Service to create/update the borrowing record.
    
Borrowing Service
    Maintains borrowing records.
    Provides an endpoint to retrieve all borrowed books by a user.

Requirements:
    Each service should have its own database.
    Services should communicate using REST templates.
    Implement proper error handling. For instance, if the Borrowing Service is down, the Book Service should not allow borrowing a book.
    Handle scenarios where a book is added or removed. The corresponding author's list of books should be updated.
    Implement an endpoint in the Borrowing Service to find all overdue books.

Bonus (for candidates to show extra effort):
    Implement service discovery using Spring Eureka.
    Add client-side load balancing with Ribbon.
    Implement API Gateway using Spring Cloud Gateway or Zuul.

Guidelines:
    Each service should be a separate Spring Boot application.
    All inter-service communication should be handled via REST calls.
    Ensure transactional consistency across services. For example, if the Borrowing Service fails to create a record, the Book Service should mark the book as available.
    Use H2 or an embedded database for simplicity.

Assessment Points:
    Proper division of responsibilities among services.
    Adherence to RESTful principles.
    Proper error handling and transaction management across services.
    Quality and clarity of the code, including meaningful variable names, modularity, and inclusion of comments.
    Proper implementation of the bonus features, if attempted.

This assessment exercise should give you a good chance to showcase their deep understanding of both monolithic and microservices architectures in Spring Boot. Given your vast experiences, the challenge should be approachable while still allowing room for them to exhibit advanced skills and best practices.


Powersheel script for setup
---------------------------
PS C:\Users\Jay> cd D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> dotnet new sln
The template "Solution File" was created successfully.

PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> mkdir src


    Directory: D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----         11/9/2023   8:23 AM                src


PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> mkdir test


    Directory: D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----         11/9/2023   8:23 AM                test


PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> mkdir doc


    Directory: D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----         11/9/2023   8:23 AM                doc

Create API project setup
------------------------
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> cd .\src\
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\src> dotnet new webapi -o AuthorService
The template "ASP.NET Core Web API" was created successfully.

Processing post-creation actions...
Restoring D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\src\AuthorService\AuthorService.csproj:
  Determining projects to restore...
  Restored D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\src\AuthorService\AuthorService.csproj (in 294 ms).
Restore succeeded.


PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\src> dotnet new webapi -o BookService
The template "ASP.NET Core Web API" was created successfully.

Processing post-creation actions...
Restoring D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\src\BookService\BookService.csproj:
  Determining projects to restore...
  Restored D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\src\BookService\BookService.csproj (in 199 ms).
Restore succeeded.


PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\src> dotnet new webapi -o BorrowingService
The template "ASP.NET Core Web API" was created successfully.

Processing post-creation actions...
Restoring D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\src\BorrowingService\BorrowingService.csproj:
  Determining projects to restore...
  Restored D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\src\BorrowingService\BorrowingService.csproj (in 180 ms).
Restore succeeded.
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> ls


    Directory: D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----         11/9/2023   8:23 AM                doc
d-----         11/9/2023   8:25 AM                src
d-----         11/9/2023   8:23 AM                test
-a----         11/9/2023   8:22 AM            441 MicroservicesLibraryManagementSystem.sln
-a----         11/9/2023   8:27 AM           5520 Reference.txt

Add API projects to Solution
----------------------------
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> dotnet sln .\MicroservicesLibraryManagementSystem.sln add .\src\AuthorService\AuthorService.csproj
Project `src\AuthorService\AuthorService.csproj` added to the solution.
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> dotnet sln .\MicroservicesLibraryManagementSystem.sln add .\src\BookService\BookService.csproj
Project `src\BookService\BookService.csproj` added to the solution.
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> dotnet sln .\MicroservicesLibraryManagementSystem.sln add .\src\BorrowingService\BorrowingService.csproj
Project `src\BorrowingService\BorrowingService.csproj` added to the solution.
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem>

Create Unit test setup
----------------------
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> cd .\test\
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\test> dotnet new nunit -o AuthorServiceTest
The template "NUnit 3 Test Project" was created successfully.

Processing post-creation actions...
Restoring D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\test\AuthorServiceTest\AuthorServiceTest.csproj:
  Determining projects to restore...
  Restored D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\test\AuthorServiceTest\AuthorServiceTest.csproj (in 636 ms).
Restore succeeded.


PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\test> dotnet new nunit -o BookServiceTest
The template "NUnit 3 Test Project" was created successfully.

Processing post-creation actions...
Restoring D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\test\BookServiceTest\BookServiceTest.csproj:
  Determining projects to restore...
  Restored D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\test\BookServiceTest\BookServiceTest.csproj (in 348 ms).
Restore succeeded.


PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\test> dotnet new nunit -o BorrowingServiceTest
The template "NUnit 3 Test Project" was created successfully.

Processing post-creation actions...
Restoring D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\test\BorrowingServiceTest\BorrowingServiceTest.csproj:
  Determining projects to restore...
  Restored D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\test\BorrowingServiceTest\BorrowingServiceTest.csproj (in 360 ms).
Restore succeeded.

Add Unit test projects to Solution
----------------------------------
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem\test> cd..
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> dotnet sln .\MicroservicesLibraryManagementSystem.sln add .\test\AuthorServiceTest\AuthorServiceTest.csproj
Project `test\AuthorServiceTest\AuthorServiceTest.csproj` added to the solution.
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> dotnet sln .\MicroservicesLibraryManagementSystem.sln add .\test\BookServiceTest\BookServiceTest.csproj
Project `test\BookServiceTest\BookServiceTest.csproj` added to the solution.
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem> dotnet sln .\MicroservicesLibraryManagementSystem.sln add .\test\BorrowingServiceTest\BorrowingServiceTest.csproj
Project `test\BorrowingServiceTest\BorrowingServiceTest.csproj` added to the solution.
PS D:\edureka-training\MicroservicesApplications\MicroservicesLibraryManagementSystem>




Code 
---
Entities:

Book: id, title, ISBN, author, status (available, borrowed)
Author: id, name, country, list of books
Borrowing Record: id, book, borrowing date, return date, user

Nuget for Author
----------------
dotnet add package Microsoft.EntityFrameworkCore   
dotnet add package Microsoft.EntityFrameworkCore.Tools
dotnet add package MySql.EntityFrameworkCore   